platform :ios, '16.0'
# Resolve react_native_pods.rb with node to allow for hoisting

require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

prepare_react_native_project!

# Ensure static linking is used
use_frameworks! :linkage => :static

target 'PANCardReader' do
  # Ensure Google Sign-In and Firebase Auth work with modular headers
  pod 'GoogleSignIn', :modular_headers => true
  pod 'FirebaseAuth', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  # pod 'GoogleMLKit/TextRecognition'
  pod 'GoogleMLKit/TextRecognitionDevanagari'

  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
  
    # More comprehensive configuration for all targets
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Set minimum deployment target for all pods
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        
        # Handle architecture issues for simulators
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        
        # Ensure simulator compatibility
        if config.build_settings['SDKROOT'] == 'iphoneos'
          config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
        end
      end
    end
    
    # Set build active architecture only to NO for debug
    installer.pods_project.build_configurations.each do |config|
      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
      if config.name == 'Debug'
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
      end
    end
  end
end